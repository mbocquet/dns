---
# tasks file for dns
- name: Package
  ansible.builtin.package:
    name: "{{ dns_packages | default('bind9') }}"
  tags:
    - dns
    - package

- name: Service_facts
  ansible.builtin.service_facts:
  tags:
    - dns
    - facts

# TODO fix me
# - name: Create DNSSEC key files
#   command:
#     'dnssec-keygen -K /etc/bind -a HMAC-MD5 -b 128 -n HOST {{ dns_keyname }}'
#   register: dns_kfilescreation
#   notify: start bind
#   when:
#     - not ansible_check_mode
#     - dns_role == "master"
#   tags:
#     - dns
#     - keys

- name: Check K file
  ansible.builtin.shell: ls /etc/bind/K*.key
  register: dns_kfiles
  # ignore_errors: "{{ ansible_check_mode }}"
  changed_when: false
  when:
    - dns_role == "master"
  check_mode: false
  tags:
    - dns
    - keys

- name: Get Kfiles name
  ansible.builtin.set_fact:
    dns_kfilename: "{{ dns_kfiles.stdout }}"
  when:
    - dns_role == "master"
    # - not ansible_check_mode
    # - dns_kfilescreation is succeeded
  check_mode: false
  tags:
    - dns
    - keys
    - facts

- name: "Extract key from {{ dns_kfilename }}"
  ansible.builtin.shell:
    cmd: "set -o pipefail && cat {{ dns_kfilename }} | cut -d' ' -f 7"
    executable: /bin/bash
  register: rndckey
  ignore_errors: "{{ ansible_check_mode }}"
  changed_when: false
  when:
    - dns_role == "master"
    # - not ansible_check_mode
    # - dns_kfilescreation is succeeded
  check_mode: false
  tags:
    - dns
    - keys

- name: Set rndckeyvalue
  ansible.builtin.set_fact:
    rndckeyvalue: "{{ rndckey.stdout }}"
  when:
    - dns_role == "master"
    # - not ansible_check_mode
    - rndckey is succeeded
  tags:
    - dns
    - keys

- name: "Check {{ dns_keyfile }}"
  ansible.builtin.stat:
    path: "{{ dns_keyfile }}"
  register: rndckey
  tags:
    - dns
    - keys

# TODO fix me
# - name: "update {{ dns_keyfile }} with new key"
#   ansible.builtin.lineinfile:
#     path: '{{ dns_keyfile }}'
#     regexp: '^.*secret.*$'
#     line: '        secret "{{ rndckey.stdout }}";'
#   when:
#     - dns_role == "master"
#     - not ansible_check_mode
#     - rndckey.stat.exists
#   tags:
#     - dns
#     - rndckey

- name: "Local config (named.conf.local)"
  ansible.builtin.template:
    src: named.conf.local.j2
    dest: /etc/bind/named.conf.local
    mode: 0644
    backup: true
  notify: Reload bind
  tags:
    - dns
    - local

- name: "Options (named.conf.options)"
  ansible.builtin.template:
    src: named.conf.options.j2
    dest: /etc/bind/named.conf.options
    mode: 0644
    backup: true
  notify: Reload bind
  tags:
    - dns
    - options

- name: Check zones files
  ansible.builtin.stat:
    path: "{{ dns_directory }}/{{ item.file }}"
  register: dns_zonefiles
  loop: "{{ dns_zones }}"
  when:
    - dns_role == "master"
  tags:
    - dns
    - zones

- name: Zone files
  ansible.builtin.template:
    src: "zone.{{ item.item.type }}.j2"
    dest: "{{ dns_directory }}/{{ item.item.file }}"
    group: "{{ dns_group }}"
    mode: 0664
  loop: "{{ dns_zonefiles.results }}"
  notify: Reload bind
  when:
    - dns_role == "master"
    - not item.stat.exists
  tags:
    - dns
    - zones
