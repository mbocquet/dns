---
# tasks file for dns
- name: package
  package:
    name: '{{ dns_packages | default ( "bind9" ) }}'
  tags:
    - dns
    - package

# make me idempotent please # - name: create DNSSEC key files
# make me idempotent please #   command: 'dnssec-keygen -K /etc/bind -a HMAC-MD5 -b 128 -n HOST {{ dns_keyname }}'
# make me idempotent please #   register: Kfilescreation
# make me idempotent please #   notify: start bind
# make me idempotent please #   when:
# make me idempotent please #     - not ansible_check_mode
# make me idempotent please #     - dns_role == "master"
# make me idempotent please #   tags:
# make me idempotent please #     - dns
# make me idempotent please #     - keys

- name: check K file
  shell: ls /etc/bind/K*.key
  register: Kfiles
  # ignore_errors: "{{ ansible_check_mode }}"
  changed_when: false
  when:
    - dns_role == "master"
  check_mode: no
  tags:
    - dns
    - keys

- name: get Kfiles name
  set_fact:
    Kfilename: "{{ Kfiles.stdout }}"
  when:
    - dns_role == "master"
    # - not ansible_check_mode
    # - Kfilescreation is succeeded
  check_mode: no
  tags:
    - dns
    - keys
    - facts

- name: "extract key from {{ Kfilename }}"
  shell:
    cmd: "set -o pipefail && cat {{ Kfilename }}|cut -d' ' -f 7"
    executable: /bin/bash
  register: rndckey
  ignore_errors: "{{ ansible_check_mode }}"
  changed_when: false
  when:
    - dns_role == "master"
    # - not ansible_check_mode
    # - Kfilescreation is succeeded
  check_mode: no
  tags:
    - dns
    - keys

- name: set rndckeyvalue
  set_fact:
    rndckeyvalue: "{{ rndckey.stdout }}"
  when:
    - dns_role == "master"
    # - not ansible_check_mode
    - rndckey is succeeded
  tags:
    - dns
    - keys

- name: "check {{ dns_keyfile }}"
  stat:
    path: '{{ dns_keyfile }}'
  register: rndckey
  tags:
    - dns
    - keys

# make me work please # - name: "update {{ dns_keyfile }} with new key"
# make me work please #   lineinfile:
# make me work please #     path: '{{ dns_keyfile }}'
# make me work please #     regexp: '^.*secret.*$'
# make me work please #     line: '        secret "{{ rndckey.stdout }}";'
# make me work please #   when:
# make me work please #     - dns_role == "master"
# make me work please #     - not ansible_check_mode
# make me work please #     - rndckey.stat.exists
# make me work please #   tags:
# make me work please #     - dns
# make me work please #     - rndckey

- name: named.conf.local
  template:
    src: 'named.conf.local.j2'
    dest: /etc/bind/named.conf.local
    backup: true
  notify: reload bind
  tags:
    - dns
    - local

- name: named.conf.options
  template:
    src: 'named.conf.options.j2'
    dest: /etc/bind/named.conf.options
    backup: true
  notify: reload bind
  tags:
    - dns
    - options

- name: check zones files
  stat:
    path: '/etc/bind/zones/{{ item.file }}'
  register: dns_zonefiles
  loop: '{{ dns_zones }}'
  tags:
    - dns
    - zones

- name: zone files
  template:
    src: 'zone.{{ item.item.type }}.j2'
    dest: '/etc/bind/zones/{{ item.item.file }}'
    group: '{{ dns_user }}'
    mode: '0664'
  loop: '{{ dns_zonefiles.results }}'
  notify: reload bind
  when:
    - dns_role == "master"
    - not item.stat.exists
  tags:
    - dns
    - zones
...
